### 解题思路

此处撰写解题思路

### 代码

* golang

```golang
func longestValidParentheses(s string) int {
    maxAns := 0
    dp := make([]int, len(s))
    for i := 1; i < len(s); i++ {
        if s[i]==')'{
            if s[i-1]=='('{
                 if i-2>=0{
                     dp[i]=dp[i-2]+2
                 }else {
                     dp[i]=2
                 }
            }
            if s[i-1]==')' && dp[i-1]!=0{   // ()( () )
                if i-1-dp[i-1]>=0 && s[i-1-dp[i-1]]=='('{
                    if i-dp[i-1]-2>=0{
                        dp[i]=dp[i-1]+dp[i-dp[i-1]-2]+2
                    }else{    
                        dp[i]=dp[i-1]+2
                    }
                }

            }
            maxAns=max(maxAns,dp[i])
        }

    }
    return maxAns
}

func max(x, y int) int {
    if x > y {
        return x
    }
    return y
}
```

