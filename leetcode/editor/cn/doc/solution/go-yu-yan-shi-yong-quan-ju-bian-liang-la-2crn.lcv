### 解题思路

注意每次都要初始化max=0 ,不同用例在跑的时候 max会被覆盖导致 max值为上次的值

### 代码

* golang

```golang
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
var max = 0
func diameterOfBinaryTree(root *TreeNode) int {
    max = 0
     if root == nil{
     	return 0
	 }

	deep(root)
  

	 return max
}

func deep(root *TreeNode)int{
	if root == nil{
		return 0
	}

	left :=deep(root.Left)
	right := deep(root.Right)
   if max < left+right {
   	max = left+right
	}
	return maxV(left,right)+1

}

func maxV(a,b int)int  {
	if a>=b{
		return a
	}else {
		return b
	}
}
```

